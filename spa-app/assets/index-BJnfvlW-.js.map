{"version":3,"file":"index-BJnfvlW-.js","sources":["../../src/app/components/base-component.ts","../../src/app/components/button/button.ts","../../src/app/components/input/input.ts","../../src/app/services/form-validation.service.ts","../../src/app/pages/auth/auth-form/fieldset-form/inputs-form.ts","../../src/app/pages/auth/auth-form/fieldset-form/fieldset-form.ts","../../src/app/pages/auth/auth-form/auth-form.ts","../../src/app/pages/auth/auth.ts","../../src/app/pages/pages.ts","../../src/app/app.ts","../../src/main.ts"],"sourcesContent":["type BaseTypes = {\n  tag?: string;\n  className: string;\n  text?: string;\n};\n\nexport default class BaseComponent {\n  protected children: BaseComponent[] = [];\n\n  protected node;\n\n  constructor({ tag = 'div', className = '', text = '' }: BaseTypes, ...children: BaseComponent[]) {\n    const node = document.createElement(tag);\n    node.className = className;\n    node.textContent = text;\n    this.node = node;\n\n    if (children) {\n      this.appendChildren(children);\n    }\n  }\n\n  public append(child: BaseComponent): void {\n    this.children.push(child);\n    this.node.append(child.getNode());\n  }\n\n  public appendChildren(children: BaseComponent[]): void {\n    children.forEach((child) => {\n      this.append(child);\n    });\n  }\n\n  public getNode(): HTMLElement {\n    return this.node;\n  }\n\n  public getChildren(): BaseComponent[] {\n    return this.children;\n  }\n\n  public setTextContent(content: string): void {\n    this.node.textContent = content;\n  }\n\n  public addAttribute(attribute: string, value: string): void {\n    this.node.setAttribute(attribute, value);\n  }\n\n  public deleteAttribute(attribute: string): void {\n    this.node.removeAttribute(attribute);\n  }\n\n  public toggleClass(className: string): void {\n    this.node.classList.toggle(className);\n  }\n\n  public addListener(event: string, listener: (e: Event) => void, options = false): void {\n    this.node.addEventListener(event, listener, options);\n  }\n\n  public removeListener(event: string, listener: (e: Event) => void, options = false): void {\n    this.node.removeEventListener(event, listener, options);\n  }\n\n  public destroyChildren(): void {\n    const childrenNodes = this.node.childNodes as NodeListOf<HTMLElement>;\n    childrenNodes.forEach((child: HTMLElement) => {\n      if (child instanceof BaseComponent) {\n        child.destroy();\n      }\n    });\n    this.children.length = 0;\n  }\n\n  public destroy(): void {\n    this.destroyChildren();\n    this.node.remove();\n  }\n}\n","import BaseComponent from '../base-component';\n\ninterface IButton {\n  text: string;\n  className: string;\n  type?: string;\n  callback?: (e: Event) => void;\n}\n\nexport default class Button extends BaseComponent {\n  constructor({ text, className, type, callback }: IButton) {\n    super({ tag: 'button', className, text });\n\n    if (type) {\n      this.addAttribute('type', type);\n    }\n\n    if (callback) {\n      this.addListener('click', (e) => {\n        e.preventDefault();\n        callback(e);\n      });\n    }\n  }\n\n  public disable(): void {\n    this.addAttribute('disabled', 'true');\n  }\n\n  public enable(): void {\n    this.deleteAttribute('disabled');\n  }\n}\n","import BaseComponent from '../base-component';\n\ninterface IInput {\n  type: string;\n  className: string;\n  placeholder: string;\n  required?: boolean;\n  onInput?: (e: Event) => void;\n}\n\nexport default class Input extends BaseComponent {\n  constructor({ type, className, placeholder, required, onInput }: IInput) {\n    super({ tag: 'input', className });\n\n    this.addAttribute('type', type);\n    this.addAttribute('placeholder', placeholder);\n\n    if (required !== null) {\n      this.addAttribute('required', '');\n    }\n\n    if (onInput) {\n      this.addListener('input', (e) => onInput(e));\n    }\n  }\n\n  public getValue(): string | null {\n    const node = this.getNode() as HTMLInputElement;\n    if (node) {\n      const element = node;\n      return element.value;\n    }\n    return null;\n  }\n}\n","interface IValidation {\n  log: string;\n  pass: string;\n}\n\nexport default class Validation {\n  private log;\n\n  private pass;\n\n  constructor({ log, pass }: IValidation) {\n    this.log = log;\n    this.pass = pass;\n  }\n\n  public getLogPass(): void {\n    if (this.log.trim() === '' || this.pass.trim() === '') {\n      console.log('error');\n    } else {\n      console.log(this.log, this.pass);\n    }\n  }\n}\n","import BaseComponent from '../../../../components/base-component';\nimport Button from '../../../../components/button/button';\nimport Input from '../../../../components/input/input';\nimport Validation from '../../../../services/form-validation.service';\n\nexport default class InputsForm {\n  private inputsForm: BaseComponent;\n\n  private logInput: Input;\n\n  private passInput: Input;\n\n  private button: Button;\n\n  constructor() {\n    this.logInput = new Input({\n      type: 'input',\n      className: 'fieldset-input--login input',\n      placeholder: 'Login',\n      required: true,\n      onInput: (e) => this.checkInputChange(e),\n    });\n\n    this.passInput = new Input({\n      type: 'password',\n      className: 'fieldset-input--password input',\n      placeholder: 'password',\n      required: true,\n      onInput: (e) => this.checkInputChange(e),\n    });\n\n    this.button = new Button({\n      className: 'fieldset-button btn',\n      text: 'Log In',\n      type: 'submit',\n      callback: () => this.initValidation(),\n    });\n\n    this.inputsForm = new BaseComponent({\n      className: 'auth-fieldset--inputs',\n    });\n    this.inputsForm.appendChildren([this.logInput, this.passInput, this.button]);\n    this.checkInputValue();\n  }\n\n  private initValidation(): void {\n    const logValue = this.getLogValue() || '';\n    const passValue = this.getPassValue() || '';\n\n    const validation = new Validation({\n      log: logValue,\n      pass: passValue,\n    });\n    validation.getLogPass();\n  }\n\n  private checkInputValue(): void {\n    const children = this.inputsForm.getChildren();\n\n    children.forEach((child) => {\n      const node = child.getNode();\n      if (!node.classList.contains('input')) return;\n\n      const inputElement = node as HTMLInputElement;\n      if (inputElement.value.trim() === '') {\n        this.button.disable();\n      } else {\n        this.button.enable();\n      }\n    });\n  }\n\n  private isValueInInput(): void {\n    if (this.getLogValue()?.trim() === '' || this.getPassValue()?.trim() === '') {\n      this.button.disable();\n    } else {\n      this.button.enable();\n    }\n  }\n\n  private checkInputChange(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    const inputValue = inputElement.value;\n\n    if (inputValue) {\n      this.isValueInInput();\n    }\n  }\n\n  public getLogValue(): string | null {\n    return this.logInput.getValue();\n  }\n\n  public getPassValue(): string | null {\n    return this.passInput.getValue();\n  }\n\n  public getComponent(): BaseComponent {\n    return this.inputsForm;\n  }\n}\n","import BaseComponent from '../../../../components/base-component';\nimport InputsForm from './inputs-form';\n\nexport default class Fieldset {\n  private fieldset: BaseComponent;\n\n  private inputs: InputsForm;\n\n  constructor() {\n    this.inputs = new InputsForm();\n\n    const InputsComponent = this.inputs.getComponent();\n\n    this.fieldset = new BaseComponent(\n      {\n        tag: 'fieldset',\n        className: 'auth-form--fieldset',\n      },\n      new BaseComponent({\n        tag: 'legend',\n        className: 'fieldset-legend',\n        text: 'Authorization',\n      }),\n      InputsComponent,\n    );\n  }\n\n  public getComponent(): BaseComponent {\n    return this.fieldset;\n  }\n}\n","import BaseComponent from '../../../components/base-component';\nimport Fieldset from './fieldset-form/fieldset-form';\nimport './auth-form.scss';\n\nexport default class AuthForm {\n  private form: Fieldset;\n\n  private auth: BaseComponent;\n\n  constructor() {\n    this.form = new Fieldset();\n    const FieldsetFormComponent = this.form.getComponent();\n\n    this.auth = new BaseComponent(\n      {\n        tag: 'form',\n        className: 'auth-form',\n      },\n      FieldsetFormComponent,\n    );\n  }\n\n  public getComponent(): BaseComponent {\n    return this.auth;\n  }\n}\n","import BaseComponent from '../../components/base-component';\nimport AuthForm from './auth-form/auth-form';\nimport './auth.scss';\n\nexport default class Authorization {\n  private authForm: AuthForm;\n\n  private auth: BaseComponent;\n\n  constructor() {\n    this.authForm = new AuthForm();\n    const AuthFormComponent = this.authForm.getComponent();\n\n    this.auth = new BaseComponent(\n      {\n        className: 'auth',\n      },\n      AuthFormComponent,\n    );\n  }\n\n  public getComponent(): BaseComponent {\n    return this.auth;\n  }\n}\n","import BaseComponent from '../components/base-component';\nimport Authorization from './auth/auth';\n\nexport default class Pages {\n  private pages: BaseComponent;\n\n  private auth: Authorization;\n\n  constructor() {\n    this.auth = new Authorization();\n    const AuthComponent = this.auth.getComponent();\n    this.pages = new BaseComponent(\n      {\n        className: 'container',\n      },\n      AuthComponent,\n    );\n  }\n\n  public getNode(): HTMLElement {\n    return this.pages.getNode();\n  }\n}\n","import Pages from './pages/pages';\n\nexport default class App {\n  private body: HTMLElement;\n\n  private pages: Pages;\n\n  constructor() {\n    this.body = document.body;\n    this.pages = new Pages();\n  }\n\n  public start(): void {\n    this.body.append(this.pages.getNode());\n  }\n}\n","import App from './app/app';\nimport './styles/style.css';\n\nconst app = new App();\napp.start();\n"],"names":["BaseComponent","tag","className","text","children","__publicField","node","child","content","attribute","value","event","listener","options","Button","type","callback","e","Input","placeholder","required","onInput","Validation","log","pass","InputsForm","logValue","passValue","_a","_b","Fieldset","InputsComponent","AuthForm","FieldsetFormComponent","Authorization","AuthFormComponent","Pages","AuthComponent","App","app"],"mappings":"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"}