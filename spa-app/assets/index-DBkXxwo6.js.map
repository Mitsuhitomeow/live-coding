{"version":3,"file":"index-DBkXxwo6.js","sources":["../../src/app/components/base-component.ts","../../src/app/components/button/button.ts","../../src/app/services/form-validation.service.ts","../../src/app/components/input/input.ts","../../src/app/pages/auth/auth-form/fieldset-form/inputs-form.ts","../../src/app/pages/auth/auth-form/fieldset-form/fieldset-form.ts","../../src/app/pages/auth/auth-form/auth-form.ts","../../src/app/pages/auth/auth.ts","../../src/app/pages/pages.ts","../../src/app/app.ts","../../src/main.ts"],"sourcesContent":["export default class BaseComponent {\n  protected children: BaseComponent[] = [];\n\n  protected node;\n\n  constructor({ tag = 'div', className = '', text = '' }, ...children: BaseComponent[]) {\n    const node = document.createElement(tag);\n    node.className = className;\n    node.textContent = text;\n    this.node = node;\n\n    if (children) {\n      this.appendChildren(children);\n    }\n  }\n\n  public append(child: BaseComponent) {\n    this.children.push(child);\n    this.node.append(child.getNode());\n  }\n\n  public appendChildren(children: BaseComponent[]) {\n    children.forEach((child) => {\n      this.append(child);\n    });\n  }\n\n  public getNode() {\n    return this.node;\n  }\n\n  public getChildren() {\n    return this.children;\n  }\n\n  public setTextContent(content: string) {\n    this.node.textContent = content;\n  }\n\n  public addAttribute(attribute: string, value: string) {\n    this.node.setAttribute(attribute, value);\n  }\n\n  public deleteAttribute(attribute: string) {\n    this.node.removeAttribute(attribute);\n  }\n\n  public toggleClass(className: string) {\n    this.node.classList.toggle(className);\n  }\n\n  public addListener(event: string, listener: (e: Event) => void, options = false) {\n    this.node.addEventListener(event, listener, options);\n  }\n\n  public removeListener(event: string, listener: (e: Event) => void, options = false) {\n    this.node.removeEventListener(event, listener, options);\n  }\n\n  public destroyChildren() {\n    const childrenNodes = this.node.childNodes as NodeListOf<HTMLElement>;\n    childrenNodes.forEach((child: HTMLElement) => {\n      if (child instanceof BaseComponent) {\n        child.destroy();\n      }\n    });\n    this.children.length = 0;\n  }\n\n  public destroy() {\n    this.destroyChildren();\n    this.node.remove();\n  }\n}\n","import BaseComponent from '../base-component';\n\ninterface IButton {\n  text: string;\n  className: string;\n  callback?: (e: Event) => void;\n}\n\nexport default class Button extends BaseComponent {\n  constructor({ text, className, callback }: IButton) {\n    super({ tag: 'button', className, text });\n\n    if (callback) {\n      this.addListener('click', (e) => {\n        e.preventDefault();\n        callback(e);\n      });\n    }\n  }\n}\n","interface IValidation {\n  log: string;\n  pass: string;\n}\n\nexport default class Validation {\n  private log;\n\n  private pass;\n\n  constructor({ log, pass }: IValidation) {\n    this.log = log;\n    this.pass = pass;\n  }\n\n  public getLogPass() {\n    console.log(this.log, this.pass);\n  }\n}\n","import BaseComponent from '../base-component';\n\ninterface IInput {\n  type: string;\n  className: string;\n  placeholder: string;\n  required?: boolean;\n}\n\nexport default class Input extends BaseComponent {\n  constructor({ type, className, placeholder, required }: IInput) {\n    super({ tag: 'input', className });\n\n    this.addAttribute('type', type);\n    this.addAttribute('placeholder', placeholder);\n\n    if (required !== null) {\n      this.addAttribute('required', '');\n    }\n  }\n\n  public getValue() {\n    const node = this.getNode() as HTMLInputElement;\n    if (node) {\n      const element = node;\n      return element.value;\n    }\n    return null;\n  }\n}\n","import BaseComponent from '../../../../components/base-component';\nimport Input from '../../../../components/input/input';\n\nexport default class InputsForm {\n  private inputsForm: BaseComponent;\n\n  private logInput: Input;\n\n  private passInput: Input;\n\n  constructor() {\n    this.logInput = new Input({\n      type: 'input',\n      className: 'fieldset-input--login input',\n      placeholder: 'Login',\n      required: true,\n    });\n\n    this.passInput = new Input({\n      type: 'password',\n      className: 'fieldset-input--password input',\n      placeholder: 'password',\n      required: true,\n    });\n\n    this.inputsForm = new BaseComponent({\n      className: 'auth-fieldset--inputs',\n    });\n\n    this.inputsForm.appendChildren([this.logInput, this.passInput]);\n  }\n\n  public getLogValue() {\n    return this.logInput.getValue();\n  }\n\n  public getPassValue() {\n    return this.passInput.getValue();\n  }\n\n  public getComponent() {\n    return this.inputsForm;\n  }\n}\n","import BaseComponent from '../../../../components/base-component';\nimport Button from '../../../../components/button/button';\nimport Validation from '../../../../services/form-validation.service';\nimport InputsForm from './inputs-form';\n\nexport default class Fieldset {\n  private fieldset: BaseComponent;\n\n  private inputs: InputsForm;\n\n  constructor() {\n    this.inputs = new InputsForm();\n    const InputsComponent = this.inputs.getComponent();\n    this.fieldset = new BaseComponent(\n      {\n        tag: 'fieldset',\n        className: 'auth-form--fieldset',\n      },\n      new BaseComponent({\n        tag: 'legend',\n        className: 'fieldset-legend',\n        text: 'Authorization',\n      }),\n      InputsComponent,\n      new Button({\n        className: 'fieldset-button btn',\n        text: 'Log In',\n        callback: () => this.initValidation(),\n      }),\n    );\n  }\n\n  private initValidation() {\n    const logValue = this.inputs.getLogValue() || '';\n    const passValue = this.inputs.getPassValue() || '';\n\n    const validation = new Validation({\n      log: logValue,\n      pass: passValue,\n    });\n\n    validation.getLogPass();\n  }\n\n  public getComponent() {\n    return this.fieldset;\n  }\n}\n","import BaseComponent from '../../../components/base-component';\nimport Fieldset from './fieldset-form/fieldset-form';\nimport './auth-form.scss';\n\nexport default class AuthForm {\n  private form: Fieldset;\n\n  private auth: BaseComponent;\n\n  constructor() {\n    this.form = new Fieldset();\n    const FieldsetFormComponent = this.form.getComponent();\n\n    this.auth = new BaseComponent(\n      {\n        className: 'auth-form',\n      },\n      FieldsetFormComponent,\n    );\n  }\n\n  public getComponent() {\n    return this.auth;\n  }\n}\n","import BaseComponent from '../../components/base-component';\nimport AuthForm from './auth-form/auth-form';\nimport './auth.scss';\n\nexport default class Authorization {\n  private authForm: AuthForm;\n\n  private auth: BaseComponent;\n\n  constructor() {\n    this.authForm = new AuthForm();\n    const AuthFormComponent = this.authForm.getComponent();\n\n    this.auth = new BaseComponent(\n      {\n        className: 'auth',\n      },\n      AuthFormComponent,\n    );\n  }\n\n  public getComponent() {\n    return this.auth;\n  }\n}\n","import BaseComponent from '../components/base-component';\nimport Authorization from './auth/auth';\n\nexport default class Pages {\n  private pages: BaseComponent;\n\n  private auth: Authorization;\n\n  constructor() {\n    this.auth = new Authorization();\n    const AuthComponent = this.auth.getComponent();\n    this.pages = new BaseComponent(\n      {\n        className: 'container',\n      },\n      AuthComponent,\n    );\n  }\n\n  public getNode() {\n    return this.pages.getNode();\n  }\n}\n","import Pages from './pages/pages';\n\nexport default class App {\n  private body: HTMLElement;\n\n  private pages: Pages;\n\n  constructor() {\n    this.body = document.body;\n    this.pages = new Pages();\n  }\n\n  public start() {\n    this.body.append(this.pages.getNode());\n  }\n}\n","import App from './app/app';\nimport './styles/style.css';\n\nconst app = new App();\napp.start();\n"],"names":["BaseComponent","tag","className","text","children","__publicField","node","child","content","attribute","value","event","listener","options","Button","callback","e","Validation","log","pass","Input","type","placeholder","required","InputsForm","Fieldset","InputsComponent","logValue","passValue","AuthForm","FieldsetFormComponent","Authorization","AuthFormComponent","Pages","AuthComponent","App","app"],"mappings":"82BAAA,MAAqBA,CAAc,CAKjC,YAAY,CAAE,IAAAC,EAAM,MAAO,UAAAC,EAAY,GAAI,KAAAC,EAAO,OAASC,EAA2B,CAJ5EC,EAAA,gBAA4B,CAAA,GAE5BA,EAAA,aAGF,MAAAC,EAAO,SAAS,cAAcL,CAAG,EACvCK,EAAK,UAAYJ,EACjBI,EAAK,YAAcH,EACnB,KAAK,KAAOG,EAERF,GACF,KAAK,eAAeA,CAAQ,CAEhC,CAEO,OAAOG,EAAsB,CAC7B,KAAA,SAAS,KAAKA,CAAK,EACxB,KAAK,KAAK,OAAOA,EAAM,QAAS,CAAA,CAClC,CAEO,eAAeH,EAA2B,CACtCA,EAAA,QAASG,GAAU,CAC1B,KAAK,OAAOA,CAAK,CAAA,CAClB,CACH,CAEO,SAAU,CACf,OAAO,KAAK,IACd,CAEO,aAAc,CACnB,OAAO,KAAK,QACd,CAEO,eAAeC,EAAiB,CACrC,KAAK,KAAK,YAAcA,CAC1B,CAEO,aAAaC,EAAmBC,EAAe,CAC/C,KAAA,KAAK,aAAaD,EAAWC,CAAK,CACzC,CAEO,gBAAgBD,EAAmB,CACnC,KAAA,KAAK,gBAAgBA,CAAS,CACrC,CAEO,YAAYP,EAAmB,CAC/B,KAAA,KAAK,UAAU,OAAOA,CAAS,CACtC,CAEO,YAAYS,EAAeC,EAA8BC,EAAU,GAAO,CAC/E,KAAK,KAAK,iBAAiBF,EAAOC,EAAUC,CAAO,CACrD,CAEO,eAAeF,EAAeC,EAA8BC,EAAU,GAAO,CAClF,KAAK,KAAK,oBAAoBF,EAAOC,EAAUC,CAAO,CACxD,CAEO,iBAAkB,CACD,KAAK,KAAK,WAClB,QAASN,GAAuB,CACxCA,aAAiBP,GACnBO,EAAM,QAAQ,CAChB,CACD,EACD,KAAK,SAAS,OAAS,CACzB,CAEO,SAAU,CACf,KAAK,gBAAgB,EACrB,KAAK,KAAK,QACZ,CACF,CCjEA,MAAqBO,UAAed,CAAc,CAChD,YAAY,CAAE,KAAAG,EAAM,UAAAD,EAAW,SAAAa,GAAqB,CAClD,MAAM,CAAE,IAAK,SAAU,UAAAb,EAAW,KAAAC,CAAM,CAAA,EAEpCY,GACG,KAAA,YAAY,QAAUC,GAAM,CAC/BA,EAAE,eAAe,EACjBD,EAASC,CAAC,CAAA,CACX,CAEL,CACF,CCdA,MAAqBC,CAAW,CAK9B,YAAY,CAAE,IAAAC,EAAK,KAAAC,GAAqB,CAJhCd,EAAA,YAEAA,EAAA,aAGN,KAAK,IAAMa,EACX,KAAK,KAAOC,CACd,CAEO,YAAa,CAClB,QAAQ,IAAI,KAAK,IAAK,KAAK,IAAI,CACjC,CACF,CCTA,MAAqBC,UAAcpB,CAAc,CAC/C,YAAY,CAAE,KAAAqB,EAAM,UAAAnB,EAAW,YAAAoB,EAAa,SAAAC,GAAoB,CAC9D,MAAM,CAAE,IAAK,QAAS,UAAArB,CAAW,CAAA,EAE5B,KAAA,aAAa,OAAQmB,CAAI,EACzB,KAAA,aAAa,cAAeC,CAAW,EAExCC,IAAa,MACV,KAAA,aAAa,WAAY,EAAE,CAEpC,CAEO,UAAW,CACV,MAAAjB,EAAO,KAAK,UAClB,OAAIA,EACcA,EACD,MAEV,IACT,CACF,CC1BA,MAAqBkB,CAAW,CAO9B,aAAc,CANNnB,EAAA,mBAEAA,EAAA,iBAEAA,EAAA,kBAGD,KAAA,SAAW,IAAIe,EAAM,CACxB,KAAM,QACN,UAAW,8BACX,YAAa,QACb,SAAU,EAAA,CACX,EAEI,KAAA,UAAY,IAAIA,EAAM,CACzB,KAAM,WACN,UAAW,iCACX,YAAa,WACb,SAAU,EAAA,CACX,EAEI,KAAA,WAAa,IAAIpB,EAAc,CAClC,UAAW,uBAAA,CACZ,EAED,KAAK,WAAW,eAAe,CAAC,KAAK,SAAU,KAAK,SAAS,CAAC,CAChE,CAEO,aAAc,CACZ,OAAA,KAAK,SAAS,UACvB,CAEO,cAAe,CACb,OAAA,KAAK,UAAU,UACxB,CAEO,cAAe,CACpB,OAAO,KAAK,UACd,CACF,CCtCA,MAAqByB,CAAS,CAK5B,aAAc,CAJNpB,EAAA,iBAEAA,EAAA,eAGD,KAAA,OAAS,IAAImB,EACZ,MAAAE,EAAkB,KAAK,OAAO,aAAa,EACjD,KAAK,SAAW,IAAI1B,EAClB,CACE,IAAK,WACL,UAAW,qBACb,EACA,IAAIA,EAAc,CAChB,IAAK,SACL,UAAW,kBACX,KAAM,eAAA,CACP,EACD0B,EACA,IAAIZ,EAAO,CACT,UAAW,sBACX,KAAM,SACN,SAAU,IAAM,KAAK,eAAe,CAAA,CACrC,CAAA,CAEL,CAEQ,gBAAiB,CACvB,MAAMa,EAAW,KAAK,OAAO,YAAA,GAAiB,GACxCC,EAAY,KAAK,OAAO,aAAA,GAAkB,GAE7B,IAAIX,EAAW,CAChC,IAAKU,EACL,KAAMC,CAAA,CACP,EAEU,WAAW,CACxB,CAEO,cAAe,CACpB,OAAO,KAAK,QACd,CACF,CC3CA,MAAqBC,CAAS,CAK5B,aAAc,CAJNxB,EAAA,aAEAA,EAAA,aAGD,KAAA,KAAO,IAAIoB,EACV,MAAAK,EAAwB,KAAK,KAAK,aAAa,EAErD,KAAK,KAAO,IAAI9B,EACd,CACE,UAAW,WACb,EACA8B,CAAA,CAEJ,CAEO,cAAe,CACpB,OAAO,KAAK,IACd,CACF,CCpBA,MAAqBC,CAAc,CAKjC,aAAc,CAJN1B,EAAA,iBAEAA,EAAA,aAGD,KAAA,SAAW,IAAIwB,EACd,MAAAG,EAAoB,KAAK,SAAS,aAAa,EAErD,KAAK,KAAO,IAAIhC,EACd,CACE,UAAW,MACb,EACAgC,CAAA,CAEJ,CAEO,cAAe,CACpB,OAAO,KAAK,IACd,CACF,CCrBA,MAAqBC,CAAM,CAKzB,aAAc,CAJN5B,EAAA,cAEAA,EAAA,aAGD,KAAA,KAAO,IAAI0B,EACV,MAAAG,EAAgB,KAAK,KAAK,aAAa,EAC7C,KAAK,MAAQ,IAAIlC,EACf,CACE,UAAW,WACb,EACAkC,CAAA,CAEJ,CAEO,SAAU,CACR,OAAA,KAAK,MAAM,SACpB,CACF,CCpBA,MAAqBC,CAAI,CAKvB,aAAc,CAJN9B,EAAA,aAEAA,EAAA,cAGN,KAAK,KAAO,SAAS,KAChB,KAAA,MAAQ,IAAI4B,CACnB,CAEO,OAAQ,CACb,KAAK,KAAK,OAAO,KAAK,MAAM,SAAS,CACvC,CACF,CCZA,MAAMG,EAAM,IAAID,EAChBC,EAAI,MAAM"}